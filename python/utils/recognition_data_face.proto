syntax = "proto3";

// TODO: Maybe add blendshapes later
message RecognitionData {
    repeated NormalizedLandmarkList faces = 1;
    repeated Box boxes = 2;
    repeated FaceAugmentations augmentations = 3; // Here for if we want different augmentations for diff faces
    repeated FaceMeshThicknesses contour_thicknesses = 4;
    repeated FaceMeshColors faceMesh_colors = 5;
    // Vec3 camera_position = 6;
    // Vec3 camera_rotation = 7;
    uint64 timestamp = 8;
}

// A normalized version of above Landmark proto. All coordinates should be
// within [0, 1].
message NormalizedLandmark {
  optional float x = 1;
  optional float y = 2;
  optional float z = 3;
  optional float visibility = 4;
  optional float presence = 5;
}

// Group of NormalizedLandmark protos.
message NormalizedLandmarkList {
  repeated NormalizedLandmark landmarks = 1;
}

// Could also add seperate color for lips?
message FaceMeshColors {
    EdgeColor faceMesh_tesselation_color  = 1;
    EdgeColor faceMesh_contour_color = 2;
    EdgeColor faceMesh_rightBrow_color = 3;
    EdgeColor faceMesh_leftBrow_color = 4;
    EdgeColor faceMesh_rightEye_color = 5;
    EdgeColor faceMesh_leftEye_color = 6;
    EdgeColor faceMesh_rightIris_color = 7;
    EdgeColor faceMesh_leftIris_color = 8;
}

// each color is a 4-tuple (r, g, b, a)
message EdgeColor {
    int32 r = 1;
    int32 g = 2;
    int32 b = 3;
    int32 a = 4;
}

// Here if we want different augmentations for each part of face mesh
message FaceAugmentations {
    string faceMesh_tesselation_design  = 1;
    string faceMesh_contour_design = 2;
    string faceMesh_rightBrow_design = 3;
    string faceMesh_leftBrow_design = 4;
    string faceMesh_rightEye_design = 5;
    string faceMesh_leftEye_design = 6;
    string faceMesh_rightIris_design = 7;
    string faceMesh_leftIris_design = 8;
}

// Here if we want different thicknesses for each part of face mesh
message FaceMeshThicknesses {
    int32 faceMesh_tesselation_thickness  = 1;
    int32 faceMesh_contour_thickness = 2;
    int32 faceMesh_rightBrow_thickness = 3;
    int32 faceMesh_leftBrow_thickness = 4;
    int32 faceMesh_rightEye_thickness = 5;
    int32 faceMesh_leftEye_thickness = 6;
    int32 faceMesh_rightIris_thickness = 7;
    int32 faceMesh_leftIris_thickness = 8;
}

// For Bounding boxes
message Box {
    float x1 = 1;
    float y1 = 2;
    float x2 = 3;
    float y2 = 4;
}